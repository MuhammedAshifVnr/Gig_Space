name: Build, Push, and Deploy Docker Images to GCP Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: 
          - Api_gateway
          - User_Svc
          - Payment_Svc
          - Chat_Svc
          - Search_Svc
          - Gig_Svc
          - Notification_Svc
        region: [us-central1]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ matrix.region }}-docker.pkg.dev

      - name: Set up .env file for service
        run: |
          case "${{ matrix.service }}" in
            Api_gateway)
              echo "${{ secrets.API_GATEWAY_CONFIG }}" > ./Api_gateway/.env
              ;;
            User_Svc)
              echo "${{ secrets.USER_SVC_CONFIG }}" > ./User_Svc/.env
              ;;
            Payment_Svc)
              echo "${{ secrets.PAYMENT_SVC_CONFIG }}" > ./Payment_Svc/.env
              ;;
            Chat_Svc)
              echo "${{ secrets.CHAT_SVC_CONFIG }}" > ./Chat_Svc/.env
              ;;
            Search_Svc)
              echo "${{ secrets.SEARCH_SVC_CONFIG }}" > ./Search_Svc/.env
              ;;
            Gig_Svc)
              echo "${{ secrets.GIG_SVC_CONFIG }}" > ./Gig_Svc/.env
              ;;
            Notification_Svc)
              echo "${{ secrets.NOTIFICATION_SVC_CONFIG }}" > ./Notification_Svc/.env
              ;;
            *)
              echo "No configuration found for ${{ matrix.service }}"
              ;;
          esac

      - name: Build Docker Image
        run: |
          SERVICE_NAME=$(echo "${{ matrix.service }}" | tr '[:upper:]' '[:lower:]' | sed 's/_/-/g')
          docker build \
            -t ${{ matrix.region }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/gig-space/$SERVICE_NAME:latest \
            ./${{ matrix.service }}

      - name: Push Docker Image to Artifact Registry
        run: |
          SERVICE_NAME=$(echo "${{ matrix.service }}" | tr '[:upper:]' '[:lower:]' | sed 's/_/-/g')
          docker push ${{ matrix.region }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/gig-space/$SERVICE_NAME:latest

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Authenticate kubectl with GCP
        run: gcloud container clusters get-credentials gig-space-cluster --region ${{ matrix.region }}

      - name: Deploy to GKE
        run: |
          DEPLOYMENT_FILE=$(echo "${{ matrix.service }}" | tr '[:upper:]' '[:lower:]' | sed 's/_/-/g')-deployment.yaml
          kubectl apply -f K8's/$DEPLOYMENT_FILE
          kubectl rollout status deployment/${{ matrix.service }}
